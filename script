
// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© seatrips

//@version=5
indicator("AlertConditions and AlertSignal Plots with Pre Alerts LM and SM", shorttitle = "MA Multi Alerts", overlay=true)

// Indicator
ema10 = ta.ema(close, 10)
sma20 = ta.sma(close, 20)
ema34 = ta.ema(close, 34)
sma50 = ta.sma(close, 50)
sma200 = ta.sma(close, 200)

src = input(close, title='Source')

sma200plot = input(true, title='Show SMA200 on chart')

len200 = input.int(200, minval=1, title='SMA 200 Length')

len20 = input.int(20, minval=1, title='SMA 20 Length')

out20 = ta.sma(src, len20)

// Define color variables as inputs

up200_color = input(color.rgb(7, 69, 198), "Up200 Color")
down200_color = input(color.rgb(7, 99, 198), "Down200 Color")
default200_color = input(color.rgb(7, 129, 198), "Default200 Color")

// Create input field for average line
averageLineInput = input(true, title="Average Line")

//Calculate average line
averageLine = (ema10 + ema34 + sma20 + sma50 + sma200) / 5

highalert = close > averageLine
lowalert = close < averageLine

// Plot the average line

plot(averageLine, color = color.orange, title="Average", style=plot.style_circles, linewidth=2)

// Plot MA 200

out200 = ta.sma(src, len200)
up200 = out200 > out20[1]
down200 = out200 < out20[1]
mycolor200 = up200 ? up200_color : down200 ? down200_color : default200_color
plot(out200 and sma200plot ? out200 : na, title='SMA200', color=mycolor200, style=plot.style_circles, linewidth=2)

// Set candle colors

color candlecolor = close > averageLine and averageLine > sma200 ? color.orange : close < averageLine and averageLine < sma200 ? color.blue : color.white

barcolor(candlecolor)

bgcolor(highalert and averageLine > sma200 ? color.rgb(255, 153, 0, 94) : na, title="bgcolorhigh")
bgcolor(lowalert and averageLine < sma200 ? color.rgb(33, 149, 243, 94) : na, title="bgcolorlow")
bgcolor(candlecolor == color.white ? color.rgb(120, 123, 134, 94) : na)

//signal once

var isLong = false
var isShort = false

//Long

long = not isLong and (highalert and averageLine > sma200)

//Short

short = not isShort and (lowalert and averageLine < sma200)

if (long)
    isLong := true
    isShort := false

if (short)
    isLong := false
    isShort := true

plotshape(long, style=shape.arrowup, color = color.orange, title= "LONG Signal", text="LONG", textcolor=color.orange, location=location.belowbar)
plotshape(short, style=shape.arrowdown, color = color.blue, title= "SHORT Signal", text="SHORT", textcolor=color.blue, location=location.abovebar)

var candlewhitelong = false
var candlewhiteshort = false

//Long

movementlong = not candlewhitelong and highalert

//Short

movementshort = not candlewhiteshort and lowalert

if (movementlong)
    candlewhitelong := true
    candlewhiteshort := false

if (movementshort)
    candlewhitelong := false
    candlewhiteshort := true

plotshape(movementlong and candlecolor != color.orange, style=shape.arrowup, color = color.rgb(235, 226, 213), title= "LongMove", text="LM", textcolor=color.orange, location=location.belowbar)
plotshape(movementshort and candlecolor != color.blue, style=shape.arrowdown, color = color.rgb(204, 218, 229), title= "ShortMove Signal", text="SM", textcolor=color.blue, location=location.abovebar)

// Alerts Long and Short

alertcondition(long, title = "Long Alert", message = "Long Alert has been Generated")
alertcondition(short, title = "Short Alert", message = "Short Alert has been Generated")

// Alert Long and Short without Moving Averages Lined up Safe

alertcondition(movementlong and candlecolor != color.orange, title = "Long Move Alert", message = "Long Alert has been Generated")
alertcondition(movementshort and candlecolor != color.blue, title = "Short Move Alert", message = "Short Alert has been Generated")




